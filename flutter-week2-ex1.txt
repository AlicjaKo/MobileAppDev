import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Lifecycle Demo',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
      ),
      home: const LifecycleDemo(),
    );
  }
}

class LifecycleDemo extends StatefulWidget {
  const LifecycleDemo({super.key});

  @override
  State<LifecycleDemo> createState() => _LifecycleDemoState();
}

class _LifecycleDemoState extends State<LifecycleDemo> {
  @override
  void initState() {
    super.initState();
    print('initState: Widget is being created.');
  }

  @override
  void didChangeDependencies() {
    super.didChangeDependencies();
    print('didChangeDependencies: Dependencies have changed.');
  }

  @override
  void didUpdateWidget(covariant LifecycleDemo oldWidget) {
    super.didUpdateWidget(oldWidget);
    print('didUpdateWidget: Widget configuration has changed.');
  }

  @override
  void deactivate() {
    print('deactivate: Widget is being removed from the widget tree.');
    super.deactivate();
  }

  @override
  void dispose() {
    print('dispose: Widget is being permanently removed.');
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    print('build: Widget is being built.');
    return Scaffold(
      appBar: AppBar(
        title: const Text('Lifecycle Demo'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            const Text('Check the console for lifecycle method logs.'),
            ElevatedButton(
              onPressed: () {
                setState(() {
                  print('setState: State is being updated.');
                });
              },
              child: const Text('Trigger setState'),
            ),
          ],
        ),
      ),
    );
  }
}